# Build the manager binary
FROM golang:1.16 as builder
ARG GO_PROXY
ENV GOPROXY ${GO_PROXY:-"https://proxy.golang.org,direct"}
WORKDIR /workspace
# Copy the Go Modules manifests
COPY go.mod go.mod
COPY go.sum go.sum
# cache deps before building and copying source so that we don't need to re-download as much
# and so that source changes don't invalidate our downloaded layer
RUN go mod download

# Copy the go source
COPY . .

# Build
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o agent cmd/agent/agent.go
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o edgectl cmd/edgectl/edgectl.go

FROM alpine:3.14.0

WORKDIR /

COPY scripts/local-revert.sh /local-revert.sh
COPY scripts/local-restart-container.sh /local-restart-container.sh
COPY --from=builder /workspace/agent .

RUN mkdir /assets
COPY scripts/bin/jq-linux-amd64 /assets/jq
COPY scripts/bin/crictl-linux-amd64 /assets/crictl
COPY --from=builder /workspace/edgectl /assets/edgectl
COPY scripts/restart-container.sh /assets/restart-container.sh

ENTRYPOINT ["/agent"]
